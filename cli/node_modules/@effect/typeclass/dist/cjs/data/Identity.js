"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSemiCoproduct = exports.getSemiAlternative = exports.Traversable = exports.SemiProduct = exports.SemiApplicative = exports.Product = exports.Pointed = exports.Of = exports.Monad = exports.Invariant = exports.Foldable = exports.FlatMap = exports.Covariant = exports.Chainable = exports.Applicative = void 0;
var readonlyArray = _interopRequireWildcard(require("effect/Array"));
var _Function = require("effect/Function");
var covariant = _interopRequireWildcard(require("../Covariant.js"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * @since 0.24.0
 */

const of = _Function.identity;
const map = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => f(self));
const imap = /*#__PURE__*/covariant.imap(map);
const flatMap = /*#__PURE__*/(0, _Function.dual)(2, (self, f) => f(self));
const product = (self, that) => [self, that];
const productMany = (self, collection) => [self, ...collection];
const traverse = F => (0, _Function.dual)(2, (self, f) => f(self));
/**
 * @category instances
 * @since 0.24.0
 */
const Covariant = exports.Covariant = {
  imap,
  map
};
/**
 * @category instances
 * @since 0.24.0
 */
const Invariant = exports.Invariant = {
  imap
};
/**
 * @category instances
 * @since 0.24.0
 */
const Of = exports.Of = {
  of
};
/**
 * @category instances
 * @since 0.24.0
 */
const Pointed = exports.Pointed = {
  of,
  imap,
  map
};
/**
 * @category instances
 * @since 0.24.0
 */
const FlatMap = exports.FlatMap = {
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
const Chainable = exports.Chainable = {
  imap,
  map,
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
const Monad = exports.Monad = {
  imap,
  of,
  map,
  flatMap
};
/**
 * @category instances
 * @since 0.24.0
 */
const SemiProduct = exports.SemiProduct = {
  imap,
  product,
  productMany
};
/**
 * @category instances
 * @since 0.24.0
 */
const Product = exports.Product = {
  of,
  imap,
  product,
  productMany,
  productAll: readonlyArray.fromIterable
};
/**
 * @category instances
 * @since 0.24.0
 */
const SemiApplicative = exports.SemiApplicative = {
  imap,
  map,
  product,
  productMany
};
/**
 * @category instances
 * @since 0.24.0
 */
const Applicative = exports.Applicative = {
  imap,
  of,
  map,
  product,
  productMany,
  productAll: readonlyArray.fromIterable
};
/**
 * @category instances
 * @since 0.24.0
 */
const getSemiCoproduct = S => ({
  imap,
  coproduct: (0, _Function.dual)(2, S.combine),
  coproductMany: (0, _Function.dual)(2, S.combineMany)
});
/**
 * @category instances
 * @since 0.24.0
 */
exports.getSemiCoproduct = getSemiCoproduct;
const getSemiAlternative = S => ({
  ...getSemiCoproduct(S),
  map
});
/**
 * @category instances
 * @since 0.24.0
 */
exports.getSemiAlternative = getSemiAlternative;
const Foldable = exports.Foldable = {
  reduce: /*#__PURE__*/(0, _Function.dual)(3, (self, b, f) => f(b, self))
};
/**
 * @category instances
 * @since 0.24.0
 */
const Traversable = exports.Traversable = {
  traverse
};
//# sourceMappingURL=Identity.js.map