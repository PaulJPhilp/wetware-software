---
description: Use clear naming and proper abstractions
globs: ["**/*.ts", "**/*.tsx"]
alwaysApply: false
---

# Naming & Abstraction

**Rule:** Names should clearly express intent. Use abstractions to hide unnecessary details. Choose expressive, domain-oriented names.

## Why

- Improves readability and maintainability  
- Helps new team members understand code faster  
- Reduces cognitive load in reasoning about code

## Examples

```ts
// Bad
function fn1(a: number[]) { return a.filter((x) => x > 0) }

// Good
function filterPositiveNumbers(numbers: number[]): number[] {
  return numbers.filter((n) => n > 0)
}
```

Use meaningful names over cryptic abbreviations or one-letter names.

## Tips
•Use nouns for types/classes and verbs for functions/methods.
•Avoid generic names like manager, helper, utils without domain context.
•Expose operations via interfaces or abstractions, hide implementation details behind them.
